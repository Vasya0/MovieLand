package Service;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/comments")
public class controlComment {

    private final CommentRepository commentRepo;
    private final MovieRepository movieRepo;
    private final UserRepository userRepo;

    public controlComment(CommentRepository commentRepo, MovieRepository movieRepo, UserRepository userRepo) {
        this.commentRepo = commentRepo;
        this.movieRepo = movieRepo;
        this.userRepo = userRepo;
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    @GetMapping
    public List<Comment> getAllComments() {
        return commentRepo.findAll();
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ñ–∏–ª—å–º—É
    @GetMapping("/{movieID}")
    public List<Comment> getCommentsByMovie(@PathVariable int movieID) {
        return commentRepo.findByMovie_MovieID(movieID);
    }

    // üîπ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    @PostMapping
    public ResponseEntity<?> addComment(@RequestBody Comment comment) {
        if (commentRepo.existsByMovie_MovieIDAndUser_UserID(comment.getMovie().getMovieID(), comment.getUser().getUserID())) {
            return ResponseEntity.badRequest().body("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —ç—Ç–æ–º—É —Ñ–∏–ª—å–º—É!");
        }

        var movie = movieRepo.findById((long) comment.getMovie().getMovieID())
                .orElseThrow(() -> new RuntimeException("–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω"));

        var user = userRepo.findById((long) comment.getUser().getUserID())
                .orElseThrow(() -> new RuntimeException("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"));

      //  Comment comment = new Comment();
        comment.setMovie(movie);
        comment.setUser(user);
        comment.setDescription(comment.getDescription());
        comment.setRate(comment.getRate());
        commentRepo.save(comment);

        return ResponseEntity.ok("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω");
    }
}
